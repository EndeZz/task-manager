const volumeLevel=document.querySelector(".video__volume__level"),video=document.querySelector(".video__content"),controls={play:document.querySelector(".video__state-play"),pause:document.querySelector(".video__state-pause"),state:document.querySelector(".video__state"),total:document.querySelector(".video__progress"),buffered:null,progress:document.querySelector(".video__progress__current"),duration:document.querySelector(".video__duration__total"),currentTime:document.querySelector(".video__duration__current"),hasHours:!1},formatTime=e=>{const o=parseInt(e,10);return[Math.floor(o/3600),Math.floor(o/60)%60,o%60].map((e=>e<10?`0${e}`:e)).filter(((e,o)=>"00"!==e||o>0)).join(":")},volumeLevelClick=()=>{video.volume=volumeLevel.value},videoPlayClick=()=>{video.paused?video.play():video.pause(),controls.play.classList.toggle("video__state-hidden"),controls.pause.classList.toggle("video__state-hidden"),volumeLevelClick()},videoDuration=()=>{controls.hasHours=video.duration/3600>=1,controls.duration.textContent=formatTime(video.duration),controls.currentTime.textContent=formatTime(0)},videoDurationUpDate=()=>{controls.currentTime.textContent=formatTime(video.currentTime)},videoProgress=()=>{const e=Math.floor(video.currentTime)/Math.floor(video.duration),o=controls.total.style.width;controls.progress.style.width=`${Math.floor(e*o)}px`};volumeLevel.addEventListener("input",volumeLevelClick),controls.state.addEventListener("click",videoPlayClick),video.addEventListener("canplay",videoDuration),video.addEventListener("timeupdate",videoDurationUpDate),video.addEventListener("timeupdate",videoProgress);