openapi: 3.0.0
info:
  title: Task Manager API
  description: open api for task manager
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    NotAuthorizedDto:
      type: object
      properties:
        statusCode:
          type: number
          description: Код статуса
        error:
          type: string
          description: Текст ошибки
      required:
        - statusCode
        - error
    InternalServerErrorDto:
      type: object
      properties:
        statusCode:
          type: number
          description: Код статуса
        error:
          type: string
          description: Текст ошибки
      required:
        - statusCode
        - error
    AuthLoginRequestDto:
      type: object
      properties:
        email:
          type: string
          maxLength: 255
          description: Email
          format: email
        password:
          type: string
          maxLength: 255
          description: Пароль
      required:
        - email
        - password
    AuthLoginResponseDto:
      type: object
      properties:
        accessToken:
          type: string
          description: Токен доступа
        refreshToken:
          type: string
          description: Токен обновления
      required:
        - accessToken
        - refreshToken
    FieldMessageDto:
      type: object
      properties:
        field:
          type: string
          description: Поле
        message:
          type: string
          description: Сообщение
      required:
        - field
        - message
    BadRequestDto:
      type: object
      properties:
        statusCode:
          type: number
          description: Код статуса
        error:
          type: string
          description: Текст ошибки
        problems:
          description: Проблемы запроса
          type: array
          items:
            $ref: '#/components/schemas/FieldMessageDto'
      required:
        - statusCode
        - error
        - problems
    AuthResfreshTokenRequestDto:
      type: object
      properties:
        refreshToken:
          type: string
          description: Токен обновления
      required:
        - refreshToken
    CommentCreateRequestDto:
      type: object
      properties:
        user:
          type: number
          description: Автор
        task:
          type: number
          description: ID задачи
        message:
          type: string
          description: Текст
      required:
        - user
        - task
        - message
    NotFoundDto:
      type: object
      properties:
        statusCode:
          type: number
          description: Код статуса
        error:
          type: string
          description: Текст ошибки
      required:
        - statusCode
        - error
    ContentTypeDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          enum:
            - video
            - audio
            - photo
          type: string
          description: Название
      required:
        - id
        - name
    UserDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          type: string
          description: Имя
      required:
        - id
        - name
    ContentDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        type:
          description: Тип контента
          $ref: '#/components/schemas/ContentTypeDto'
        name:
          type: string
          description: Название
        dateCreated:
          format: date-time
          type: string
          description: Дата создания
        author:
          description: Автор
          $ref: '#/components/schemas/UserDto'
        format:
          enum:
            - jpg
            - png
            - mp3
            - m4a
            - flac
            - avi
            - mp4
          type: string
          description: Формат
        url:
          type: string
          description: Путь к файлу
        preview:
          type: string
          description: Путь к превью
      required:
        - id
        - type
        - name
        - dateCreated
        - author
        - format
        - url
        - preview
    ContentsResponseDto:
      type: object
      properties:
        contents:
          description: Список
          type: array
          items:
            $ref: '#/components/schemas/ContentDto'
        total:
          type: number
          description: Количество
      required:
        - contents
        - total
    ContentCreateRequestDto:
      type: object
      properties:
        file:
          type: string
          description: Файл
          format: binary
        task:
          type: number
          description: ID задачи
      required:
        - file
        - task
    FileCreateRequestDto:
      type: object
      properties:
        file:
          type: string
          description: Файл
          format: binary
        task:
          type: number
          description: ID задачи
      required:
        - file
        - task
    TaskDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          type: string
          description: Название
      required:
        - id
        - name
    NotificationDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        type:
          enum:
            - video
            - audio
            - photo
            - comment
            - content
          type: string
          description: Тип
        date:
          format: date-time
          type: string
          description: Дата
        message:
          type: string
          description: Текст
        user:
          description: Пользователь
          $ref: '#/components/schemas/UserDto'
        task:
          description: Задача
          $ref: '#/components/schemas/TaskDto'
      required:
        - id
        - type
        - date
        - message
        - user
        - task
    TaskStatusDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          enum:
            - inWork
            - feedback
            - approved
          type: string
          description: Название
      required:
        - id
        - name
    TaskListResponseDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          type: string
          description: Название
        type:
          description: Тип контента
          $ref: '#/components/schemas/ContentTypeDto'
        executor:
          description: Исполнитель задачи
          $ref: '#/components/schemas/UserDto'
        dateExpired:
          format: date-time
          type: string
          description: Дата выполнения
        status:
          description: Статус
          $ref: '#/components/schemas/TaskStatusDto'
      required:
        - id
        - name
        - type
        - executor
        - dateExpired
        - status
    FileDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          type: string
          description: Название
        dateCreated:
          format: date-time
          type: string
          description: Дата создания
        format:
          enum:
            - doc
            - docx
            - xls
            - xlsx
            - pdf
          type: string
          description: Формат
        url:
          type: string
          description: Путь к файлу
      required:
        - id
        - name
        - dateCreated
        - format
        - url
    RoleDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          enum:
            - admin
            - manager
            - contentMaker
          type: string
          description: Название
      required:
        - id
        - name
    UserResponseDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          type: string
          description: Имя
        email:
          type: string
          description: Email
          format: email
        avatar:
          type: string
          description: Аватар
          format: byte
        role:
          description: Роль
          $ref: '#/components/schemas/RoleDto'
      required:
        - id
        - name
        - email
        - avatar
        - role
    CommentDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        date:
          format: date-time
          type: string
          description: Дата создания
        user:
          description: Автор
          $ref: '#/components/schemas/UserDto'
        message:
          type: string
          description: Текст
      required:
        - id
        - date
        - user
        - message
    TaskResponseDto:
      type: object
      properties:
        id:
          type: number
          description: ID
        name:
          type: string
          description: Название
        type:
          description: Тип контента
          $ref: '#/components/schemas/ContentTypeDto'
        description:
          type: string
          description: Описание
        files:
          description: Приложенные файлы
          type: array
          items:
            $ref: '#/components/schemas/FileDto'
        author:
          description: Автор задачи
          $ref: '#/components/schemas/UserResponseDto'
        executor:
          description: Исполнитель задачи
          $ref: '#/components/schemas/UserResponseDto'
        dateCreated:
          format: date-time
          type: string
          description: Дата создания
        dateExpired:
          format: date-time
          type: string
          description: Дата выполнения
        contents:
          description: Приложенный контент
          type: array
          items:
            $ref: '#/components/schemas/ContentDto'
        comments:
          description: Комментарии
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
        status:
          description: Статус
          $ref: '#/components/schemas/TaskStatusDto'
      required:
        - id
        - name
        - type
        - description
        - files
        - author
        - executor
        - dateCreated
        - dateExpired
        - contents
        - comments
        - status
    TaskCreateUpdateRequestDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          description: Название
        type:
          enum:
            - video
            - audio
            - photo
          type: string
          description: Тип контента
        description:
          type: string
          description: Описание
        author:
          type: number
          description: Автор задачи
        executor:
          type: number
          description: Исполнитель задачи
        dateExpired:
          format: date-time
          type: string
          description: Дата выполнения
      required:
        - name
        - type
        - description
        - author
        - executor
        - dateExpired
    UserCreateUpdateRequestDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          description: Имя
        email:
          type: string
          maxLength: 255
          description: Email
          format: email
        password:
          type: string
          maxLength: 255
          description: Пароль
        avatar:
          type: string
          description: Аватар
          format: byte
        role:
          enum:
            - admin
            - manager
            - contentMaker
          type: string
          description: Роль
      required:
        - name
        - email
        - password
        - avatar
        - role
paths:
  /api/auth/login:
    post:
      operationId: AuthController_login
      summary: Вход в систему
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Авторизация
  /api/auth/logout:
    post:
      operationId: AuthController_logout
      summary: Выход из системы
      parameters: []
      responses:
        '204':
          description: ''
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Авторизация
      security:
        - bearer: []
  /api/auth/refresh-token:
    post:
      operationId: AuthController_refreshToken
      summary: Обновление токена
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthResfreshTokenRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Авторизация
  /api/comments:
    post:
      operationId: CommentsController_create
      summary: Создать комментарий
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreateRequestDto'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Комментарии
      security:
        - bearer: []
  /api/contents:
    get:
      operationId: ContentsController_getAll
      summary: Лента контента
      parameters:
        - name: page
          required: true
          in: path
          description: Номер страницы
          schema:
            type: number
        - name: count
          required: true
          in: path
          description: Количество на страницу
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentsResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Контент
    post:
      operationId: ContentsController_create
      summary: Загрузить контент
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentCreateRequestDto'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Контент
      security:
        - bearer: []
  '/api/contents/{id}':
    delete:
      operationId: ContentsController_remove
      summary: Удалить контент
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Контент
      security:
        - bearer: []
  /api/files:
    post:
      operationId: FilesController_create
      summary: Загрузить файл
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileCreateRequestDto'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Файлы
      security:
        - bearer: []
  '/api/files/{id}':
    delete:
      operationId: FilesController_remove
      summary: Удалить файл
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Файлы
      security:
        - bearer: []
  /api/notifications:
    get:
      operationId: NotificationsController_getAll
      summary: Список уведомлений
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Уведомления
      security:
        - bearer: []
  /api/tasks:
    get:
      operationId: TasksController_getAll
      summary: Список задач
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskListResponseDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Задачи
      security:
        - bearer: []
    post:
      operationId: TasksController_create
      summary: Создать задачу
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdateRequestDto'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Задачи
      security:
        - bearer: []
  '/api/tasks/{id}':
    get:
      operationId: TasksController_get
      summary: Получить задачу
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Задачи
      security:
        - bearer: []
    put:
      operationId: TasksController_update
      summary: Отредактировать задачу
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdateRequestDto'
      responses:
        '204':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Задачи
      security:
        - bearer: []
    delete:
      operationId: TasksController_remove
      summary: Удалить задачу
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Задачи
      security:
        - bearer: []
  /api/users:
    get:
      operationId: UsersController_getAll
      summary: Список пользователей
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Пользователи
      security:
        - bearer: []
    post:
      operationId: UsersController_create
      summary: Создать пользователя
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateUpdateRequestDto'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Пользователи
      security:
        - bearer: []
  '/api/users/{id}':
    get:
      operationId: UsersController_get
      summary: Получить пользователя
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Пользователи
      security:
        - bearer: []
    put:
      operationId: UsersController_update
      summary: Отредактировать пользователя
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateUpdateRequestDto'
      responses:
        '204':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Пользователи
      security:
        - bearer: []
    delete:
      operationId: UsersController_remove
      summary: Удалить пользователя
      parameters:
        - name: id
          required: true
          in: path
          description: ID
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDto'
        '401':
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundDto'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorDto'
      tags:
        - Пользователи
      security:
        - bearer: []
